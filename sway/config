# Read `man 5 sway` for a complete reference.

#
# TODO: Mission: programatically generate sections of this config.
#  - Motivation: Need to have single places for colors to provide consistent look and feel.
#  - How?
#    - Split this config into various pieces for each section.
#    - Include each section in the main config.
#    - Investigate ways of generating the different sections of the config.
#    - Potentially using "configparser" package from Python.


# TODO LIST:
# - Update titles
# - There is something about the title bars, maybe
# - 12 different gray levels
# - Need keybind for taking screen shots.


# Output
output DP-1 mode 3840x2160@60Hz
output DP-1 adaptive_sync on

###########
# Screen shotting
exec /usr/lib/xdg-desktop-portal-wlr
exec /usr/lib/xdg-desktop-portal

###########
# Theme

# Font
font "Hack Nerd Font 18"
default_border pixel 3

# Colors
set $bg     #000000
set $brbg   #212121
set $fg     #bcbcbc

set $black      #3c3c3c
set $red        #8a0000
set $green      #4d6e00
set $yellow     #7d6000
set $blue       #005fb3
set $magenta    #7d0045
set $cyan       #007d7d
set $white      #d7d7af

set $brblack    #575757
set $brred      #d70000
set $brgreen    #5f8700
set $bryellow   #af8700
set $brblue     #0087ff
set $brmagenta  #af005f
set $brcyan     #00afaf
set $brwhite    #ffffd7

# Abstracted colors
set $fg_text    $brwhite
set $bg_text    $white
set $fg_frame   $black
set $bg_frame   $brbg

# Borders and colors
#                       border      background  text        indicator   child_border
client.focused          $black      $cyan       $fg_text    $yellow     $fg_frame
client.focused_inactive $bg_frame   $black      $bg_text    $yellow     $bg_frame
client.unfocused        $bg_frame   $black      $bg_text    $yellow     $bg_frame
client.urgent           $bg_frame   $brred      $bg_text    $yellow     $bg_frame


### Variables
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $term alacritty
set $personal_browser "firefox -P default-release"
set $work_browser "chromium --profile-directory='Profile 1' --enable-features=UseOzonePlatform --ozone-platform=wayland --enable-features=WaylandWindowDecorations"

### Output configuration
output * bg #000000 solid_color


### Key bindings
#
# Basics:
#
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term
    bindsym $mod+b exec $personal_browser
    bindsym $mod+Shift+b exec $work_browser
    bindsym $mod+Shift+q kill
    #bindsym $mod+d exec $menu

    floating_modifier $mod normal
    bindsym $mod+Shift+c reload
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
#
# Workspaces:
#
    # \udb82\udcc7 - nf-md-arch
    set $ws1 "󰣇"
    # \uf056 - nf-fa-circle_minus
    set $ws2 ""
    # \udb83\udeaa - nf-md-text_box_plus
    set $ws3 "󰺪"
    # \udb83\udf97 - nf-md-timeline_plus_outline
    set $ws4 "󰾗"
    set $ws5 5
    set $ws6 6
    # \udb84\udf49 - nf-md-head_plus_outline
    set $ws7 "󱍉"
    # \uf073 - nf-fa-calendar_days
    set $ws8 ""
    set $ws9 9
    set $ws0 0
    # Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws0
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws0 
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#

    workspace_layout stacking

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    #bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Splits
    bindsym $mod+m splith
    bindsym $mod+v splitv
    bindsym $mod+n split none

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    bindsym $left resize shrink width 30px
    bindsym $down resize grow height 30px
    bindsym $up resize shrink height 30px
    bindsym $right resize grow width 30px
    # TODO: Probably should make the pixel size relative to screen resolution

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

## Utilities:
# Audio
    # TODO: Find binds for these.
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    # TODO: Need to think about what screen shot manager to use.
    bindsym Print exec grim

##
## Copy/Paste
##

## Information:
#
# There are two kinds of clipboards:
# 
# 1. Primary Clipboard
#  - wayland specific
#  - text is automatically copied when selected.
#  - volatile
#  - Paste method with middle click
# 2. Regular (System) Clipboard.
#  - standard clipboard used for explicit copy/paste operations.
#  - persistent
#  - Paste method: Shift+Ins or Ctrl+v
#  - Application dependent.
#
# Firefox (likely all others except if overriden by the application):
#  - Middle click pasts Primary Clipboard
#  - Shift+ins and Ctrl+v paste the Regular Clipboard.
#
# Alacritty specific things:
#  - Shift+Ins and middle click paste the Primary Clipboard.
#    - As someone who used Shift+Ins, this presented me with confusion.
#  - Ctrl+Shift+v, by default, pastes the Regular Clipboard.
#    - This can be rebound, and I likely will.

## Todos:
#
# 1. About Keyboards without an Insert key.
#
# Laptops, and keyboards smaller than TKL, often don't have a insert key.
# Seems silly to run a whole service (ydotool) just to remap one key combination.
# Will think of a better solution to the lack of insert key later.
#
# 2. Vim yank buffer into Regular Clipboard.
#

## Desired UX:
# 1. User highlights text in any application.
# 2. Text is stored later for retreval.
# 3. User presses, Shift+Insert, most recently highlighted text is pasted.
# 4. User presses, $mod+Ctrl+p, searchable list of all previously highled text appears.
# 5. User selects entry from list with enter key.
# 6. User presses, Shift+Insert, and selected entry is pasted.

# Monitor the Regular (System) Clipboard and send to cliphist for storage.
exec wl-paste --type text --watch cliphist store

# Monitor Primary (application specific) Clipboard and send to Regular Clipboard. I.e., sync them.
# This allows any highlighted text in any application to be immediately pasted anywhere.
# NOTE: The wl-paste command above this is responsible for storing this in cliphist
exec wl-paste --primary --type text --watch sh -c "wl-paste --primary --no-newline | wl-copy"

# Read the cliphist, which should contain both Regular and Primary Clipboard entries and allow
# the selection of an entry from our clipboard history and places it in the Regular Clipboard.
bindsym $mod+Ctrl+p exec sh -c 'cliphist list | wofi -S dmenu | cliphist decode | wl-copy'


## Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    font "Hack Nerd Font 18"

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %X'; do sleep 1; done
    colors {
        statusline $fg
        background $brbg
        #                   boarder     background  text
        focused_workspace   $cyan       $cyan       $fg_text
        inactive_workspace  $black      $black      $white
        urgent_workspace    $red        $brred      $white
    }
}



include /etc/sway/config.d/*
